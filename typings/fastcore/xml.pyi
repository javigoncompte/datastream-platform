"""
This type stub file was generated by pyright.
"""

from .utils import *

"""Concise generation of XML."""
__all__ = ['voids', 'attrmap', 'valmap', 'FT', 'ft', 'Html', 'Safe', 'to_xml', 'highlight', 'showtags', 'Head', 'Title', 'Meta', 'Link', 'Style', 'Body', 'Pre', 'Code', 'Div', 'Span', 'P', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'Strong', 'Em', 'B', 'I', 'U', 'S', 'Strike', 'Sub', 'Sup', 'Hr', 'Br', 'Img', 'A', 'Nav', 'Ul', 'Ol', 'Li', 'Dl', 'Dt', 'Dd', 'Table', 'Thead', 'Tbody', 'Tfoot', 'Tr', 'Th', 'Td', 'Caption', 'Col', 'Colgroup', 'Form', 'Input', 'Textarea', 'Button', 'Select', 'Option', 'Label', 'Fieldset', 'Legend', 'Details', 'Summary', 'Main', 'Header', 'Footer', 'Section', 'Article', 'Aside', 'Figure', 'Figcaption', 'Mark', 'Small', 'Iframe', 'Object', 'Embed', 'Param', 'Video', 'Audio', 'Source', 'Canvas', 'Svg', 'Math', 'Script', 'Noscript', 'Template', 'Slot']
_specials = ...
def attrmap(o): # -> str:
    ...

def valmap(o): # -> str | None:
    ...

class FT:
    "A 'Fast Tag' structure, containing `tag`,`children`,and `attrs`"
    def __init__(self, tag: str, cs: tuple, attrs: dict = ..., void_=..., **kwargs) -> None:
        ...
    
    def on(self, f): # -> None:
        ...
    
    def changed(self): # -> Self:
        ...
    
    def __setattr__(self, k, v): # -> None:
        ...
    
    def __getattr__(self, k): # -> str | None:
        ...
    
    @property
    def list(self): # -> list[str | tuple[Any, ...] | Any | dict[Any, Any] | dict[str | Any, str | Any | None] | dict[str, Any | str | None]]:
        ...
    
    def get(self, k, default=...): # -> str | None:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def __iter__(self): # -> Iterator[Any]:
        ...
    
    def __getitem__(self, idx):
        ...
    
    def __setitem__(self, i, o): # -> None:
        ...
    
    def __call__(self, *c, **kw): # -> Self:
        ...
    
    def set(self, *c, **kw): # -> Self:
        "Set children and/or attributes (chainable)"
        ...
    


def ft(tag: str, *c, void_: bool = ..., attrmap: callable = ..., valmap: callable = ..., ft_cls=..., **kw): # -> FT:
    "Create an `FT` structure for `to_xml()`"
    ...

voids = ...
_g = ...
_all_ = ...
def Html(*c, doctype=..., **kwargs) -> FT:
    "An HTML tag, optionally preceeded by `!DOCTYPE HTML`"
    ...

class Safe(str):
    def __html__(self): # -> Self:
        ...
    


_block_tags = ...
_inline_tags = ...
def to_xml(elm, lvl=..., indent=..., do_escape=...): # -> Safe:
    "Convert `ft` element tree into an XML string"
    ...

def highlight(s, lang=...): # -> str:
    "Markdown to syntax-highlight `s` in language `lang`"
    ...

def showtags(s): # -> str:
    ...

def __getattr__(tag): # -> Callable[..., FT]:
    ...

