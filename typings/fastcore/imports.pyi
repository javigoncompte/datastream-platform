"""
This type stub file was generated by pyright.
"""

NoneType = ...
string_classes = ...
def is_iter(o): # -> Any | int | Literal[False]:
    "Test whether `o` can be used in a `for` loop"
    ...

def is_coll(o): # -> Any | int | Literal[False]:
    "Test whether `o` is a collection (i.e. has a usable `len`)"
    ...

def all_equal(a, b): # -> bool:
    "Compares whether `a` and `b` are the same length and have the same contents"
    ...

def noop(x=..., *args, **kwargs): # -> None:
    "Do nothing"
    ...

def noops(self, x=..., *args, **kwargs): # -> None:
    "Do nothing (method)"
    ...

def any_is_instance(t, *args): # -> bool:
    ...

def isinstance_str(x, cls_name): # -> bool:
    "Like `isinstance`, except takes a type name instead of a type"
    ...

def array_equal(a, b): # -> bool:
    ...

def df_equal(a, b):
    ...

def equals(a, b): # -> Any | bool:
    "Compares `a` and `b` for equality; supports sublists, tensors and arrays too"
    ...

def ipython_shell(): # -> Literal[False]:
    "Same as `get_ipython` but returns `False` if not in IPython"
    ...

def in_ipython(): # -> bool:
    "Check if code is running in some kind of IPython environment"
    ...

def in_colab(): # -> bool:
    "Check if the code is running in Google Colaboratory"
    ...

def in_jupyter(): # -> bool:
    "Check if the code is running in a jupyter notebook"
    ...

def in_notebook(): # -> bool:
    "Check if the code is running in a jupyter notebook"
    ...

def remove_prefix(text, prefix):
    "Temporary until py39 is a prereq"
    ...

def remove_suffix(text, suffix):
    "Temporary until py39 is a prereq"
    ...

